import Head from "next/head";

import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { Domains, Person, useData, submitForm } from "@/services/data";

interface FormElements extends HTMLFormControlsCollection {
  fullName: HTMLInputElement;
  companyDomain: HTMLInputElement;
}
interface PersonFormElement extends HTMLFormElement {
  readonly elements: FormElements;
}

export default function Home() {
  const { data, isError, isLoading } = useData<Domains>("domains");
  const [person, setPerson] = useState<null | string>(null);
  const [email, setEmail] = useState<null | string>(null);
  const [apiError, setError] = useState<null | string>(null);

  const handleSubmit = (event: React.FormEvent<PersonFormElement>) => {
    event.preventDefault();

    const formData: Person = {
      fullName: event.currentTarget.elements.fullName.value,
      companyDomain: event.currentTarget.elements.companyDomain.value,
    };

    submitForm(formData)
      .then((response) => {
        if (!response.ok) {
          console.log(response);
          setError(response as string);
        }

        return response.json();
      })
      .then(({ data }) => {
        setEmail(data);
        setError(null);
        setPerson(formData.fullName);
      })
      .catch((error) => {
        setError(error);
      });
  };
  function refreshPage() {
    window.location.reload();
  }

  return (
    <>
      <Head>
        <title>Guess my corporate email</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap"
          rel="stylesheet"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>What is my company email?</h1>
        <h2 className={styles.description}>
          If we knew the company domain already, we will tell you the best email
          that you can give a try ðŸ¤“
        </h2>
        <form action="/email" className={styles.form} onSubmit={handleSubmit}>
          <div>
            <label htmlFor="fullName" className={styles.label}>
              Full name
            </label>
            <input
              autoComplete="off"
              type="text"
              id="fullName"
              name="fullName"
              className={styles.inputText}
              placeholder="E.g.: Ada Lovelace"
              required
              title="Please, provide a full name, for example at least one surname"
              pattern="^\S+(?:\s+\S+)+$"
            />
          </div>
          <div>
            <label htmlFor="companyDomain" className={styles.label}>
              Company domain
            </label>
            {isLoading ? (
              "Loading options..."
            ) : (
              <select
                className={styles.dropdownList}
                id="companyDomain"
                name="companyDomain"
                required
              >
                <option value="">Please select one item</option>
                {data?.map((domain) => (
                  <option key={domain} value={domain}>
                    {domain}
                  </option>
                ))}
              </select>
            )}
          </div>
          <button type="submit" className={styles.primaryButton}>
            Search
          </button>
        </form>
        {email && (
          <section className={styles.result}>
            <h3 id="result">Result</h3>
            {`For ${person}, the corporate email is ${email}`}
            <button onClick={refreshPage} className={styles.secondaryButton}>
              Try again
            </button>
          </section>
        )}

        {isError && (
          <section className={styles.result}>
            <h3 id="error">Error message</h3>
            <p>Unfortunately we had an error on our server ðŸ˜¢</p>
            <button onClick={refreshPage} className={styles.secondaryButton}>
              Try again
            </button>
          </section>
        )}
      </main>
      <footer className={styles.footer}>
        Made with ðŸ§¡ by:
        <a href="https://github.com/joseliacosta">joseliacosta</a>
      </footer>
    </>
  );
}
